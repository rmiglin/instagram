{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ross/Desktop/instagram/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as firebase from 'firebase';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./redux/reducers\";\nimport thunk from 'redux-thunk';\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDG-F-CndYAbSwvBcCWrpbKChBfZHZ6cko\",\n  authDomain: \"instagram-295b0.firebaseapp.com\",\n  projectId: \"instagram-295b0\",\n  storageBucket: \"instagram-295b0.appspot.com\",\n  messagingSenderId: \"177970976728\",\n  appId: \"1:177970976728:web:04afa8da76e8f7db0844ad\",\n  measurementId: \"G-YZS8FWC64P\"\n};\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LandingScreen from \"./components/auth/Landing\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport LoginScreen from \"./components/auth/Login\";\nimport MainScreen from \"./components/Main\";\nimport AddScreen from \"./main/Add\";\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 14\n          }\n        }, \"Loading\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }\n        }, React.createElement(Stack.Navigator, {\n          intitialRouteName: \"Landing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 14\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 16\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 16\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 4\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 5\n        }\n      }, React.createElement(Stack.Navigator, {\n        intitialRouteName: \"Main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen,\n        options: {\n          headerShown: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["/Users/ross/Desktop/instagram/App.js"],"names":["StatusBar","React","Component","firebase","Provider","createStore","applyMiddleware","rootReducer","thunk","store","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","NavigationContainer","createStackNavigator","LandingScreen","RegisterScreen","LoginScreen","MainScreen","AddScreen","apps","length","initializeApp","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","flex","justifyContent","headerShown"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar'\nimport React, { Component } from 'react'\n\nimport { View, Text } from 'react-native'\nimport * as firebase from 'firebase'\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './redux/reducers'\nimport thunk from 'redux-thunk'\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyDG-F-CndYAbSwvBcCWrpbKChBfZHZ6cko\",\n\tauthDomain: \"instagram-295b0.firebaseapp.com\",\n\tprojectId: \"instagram-295b0\",\n\tstorageBucket: \"instagram-295b0.appspot.com\",\n\tmessagingSenderId: \"177970976728\",\n\tappId: \"1:177970976728:web:04afa8da76e8f7db0844ad\",\n\tmeasurementId: \"G-YZS8FWC64P\"\n};\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport LandingScreen from './components/auth/Landing'\nimport RegisterScreen from './components/auth/Register'\nimport LoginScreen from './components/auth/Login'\nimport MainScreen from './components/Main'\nimport AddScreen from './main/Add'\n\n\nif(firebase.apps.length === 0){\n  \tfirebase.initializeApp(firebaseConfig)\n}\n\nconst Stack = createStackNavigator();\n\nexport class App extends Component {\n  \tconstructor(props){\n    \tsuper(props);\n    \tthis.state = {\n      \t\tloaded: false\n    \t}\n  \t}\n\n  \tcomponentDidMount(){\n    \tfirebase.auth().onAuthStateChanged((user) => {\n      \tif(!user){\n        \tthis.setState({\n          \t\tloggedIn: false,\n          \t\tloaded: true,\n        \t})\n      \t} else {\n        \tthis.setState({\n          \t\tloggedIn: true,\n          \t\tloaded: true,\n        \t})\n      \t}})\n  \t}\n\n  \trender() {\n\t\tconst { loggedIn, loaded } = this.state;\n    \tif(!loaded){\n      \t\treturn(\n        \t\t<View style={{ flex: 1, justifyContent: 'center' }}>\n          \t\t\t<Text>Loading</Text>\n        \t\t</View>\n      \t\t)\n    \t}\n    \tif(!loggedIn){\n      \t\treturn (\n        \t\t<NavigationContainer>\n          \t\t\t<Stack.Navigator intitialRouteName=\"Landing\">\n            \t\t\t<Stack.Screen name=\"Landing\" component={ LandingScreen } options={{ headerShown: false}}/>\n            \t\t\t<Stack.Screen name=\"Register\" component={RegisterScreen}/>\n\t\t\t\t\t\t<Stack.Screen name=\"Login\" component={LoginScreen}/>\n          \t\t\t</Stack.Navigator>\n        \t\t</NavigationContainer>\n      \t\t)\n    \t}\n\n    \treturn (\n\t\t\t<Provider store = { store }>\n\t\t\t\t<NavigationContainer>\n\t\t\t\t\t<Stack.Navigator intitialRouteName=\"Main\">\n            \t\t\t<Stack.Screen name=\"Main\" component={ MainScreen } options={{ headerShown: false}}/>\n          \t\t\t</Stack.Navigator>\n\t\t\t\t</NavigationContainer>\n\t\t\t</Provider>\n    \t)\n  \t}\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}